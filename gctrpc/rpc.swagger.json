{
  "swagger": "2.0",
  "info": {
    "title": "rpc.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/addevent": {
      "post": {
        "operationId": "AddEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcAddEventResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcAddEventRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/addportfolioaddress": {
      "post": {
        "operationId": "AddPortfolioAddress",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGenericResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcAddPortfolioAddressRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/cancelallorders": {
      "post": {
        "operationId": "CancelAllOrders",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcCancelAllOrdersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcCancelAllOrdersRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/cancelorder": {
      "post": {
        "operationId": "CancelOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGenericResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcCancelOrderRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/converttradestocandles": {
      "get": {
        "operationId": "ConvertTradesToCandles",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetHistoricCandlesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.delimiter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.base",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.quote",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "asset_type",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "time_interval",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "sync",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "force",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/disableexchange": {
      "post": {
        "operationId": "DisableExchange",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGenericResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcGenericExchangeNameRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/disablesubsystem": {
      "get": {
        "operationId": "DisableSubsystem",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGenericResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "subsystem",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/enableexchange": {
      "post": {
        "operationId": "EnableExchange",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGenericResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcGenericExchangeNameRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/enablesubsystem": {
      "get": {
        "operationId": "EnableSubsystem",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGenericResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "subsystem",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/findmissingsavedcandleintervals": {
      "get": {
        "operationId": "FindMissingSavedCandleIntervals",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcFindMissingIntervalsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "exchangeName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "assetType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.delimiter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.base",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.quote",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "interval",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/findmissingsavedtradeintervals": {
      "get": {
        "operationId": "FindMissingSavedTradeIntervals",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcFindMissingIntervalsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "exchangeName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "assetType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.delimiter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.base",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.quote",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/gctscript/autoload": {
      "post": {
        "operationId": "GCTScriptAutoLoadToggle",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGenericResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcGCTScriptAutoLoadRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/gctscript/execute": {
      "get": {
        "operationId": "GCTScriptExecute",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGenericResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "script.UUID",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "script.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "script.path",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "script.next_run",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/gctscript/query": {
      "get": {
        "operationId": "GCTScriptQuery",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGCTScriptQueryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "script.UUID",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "script.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "script.path",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "script.next_run",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/gctscript/read": {
      "post": {
        "operationId": "GCTScriptReadScript",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGCTScriptQueryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcGCTScriptReadScriptRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/gctscript/status": {
      "get": {
        "operationId": "GCTScriptStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGCTScriptStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/gctscript/stop": {
      "post": {
        "operationId": "GCTScriptListAll",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGCTScriptStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcGCTScriptListAllRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/gctscript/upload": {
      "post": {
        "operationId": "GCTScriptUpload",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGenericResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcGCTScriptUploadRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/getaccountinfo": {
      "get": {
        "operationId": "GetAccountInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetAccountInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/getaccountinfostream": {
      "get": {
        "operationId": "GetAccountInfoStream",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/gctrpcGetAccountInfoResponse"
                },
                "error": {
                  "$ref": "#/definitions/runtimeStreamError"
                }
              },
              "title": "Stream result of gctrpcGetAccountInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/getauditevent": {
      "get": {
        "operationId": "GetAuditEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetAuditEventResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order_by",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/getcommunicationrelayers": {
      "get": {
        "operationId": "GetCommunicationRelayers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetCommunicationRelayersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/getconfig": {
      "get": {
        "operationId": "GetConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/getcryptodepositaddress": {
      "post": {
        "operationId": "GetCryptocurrencyDepositAddress",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetCryptocurrencyDepositAddressResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcGetCryptocurrencyDepositAddressRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/getcryptodepositaddresses": {
      "post": {
        "operationId": "GetCryptocurrencyDepositAddresses",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetCryptocurrencyDepositAddressesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcGetCryptocurrencyDepositAddressesRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/getevents": {
      "get": {
        "operationId": "GetEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetEventsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/getexchangeassets": {
      "get": {
        "operationId": "GetExchangeAssets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetExchangeAssetsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/getexchangeinfo": {
      "get": {
        "operationId": "GetExchangeInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetExchangeInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/getexchangeorderbookstream": {
      "get": {
        "operationId": "GetExchangeOrderbookStream",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/gctrpcOrderbookResponse"
                },
                "error": {
                  "$ref": "#/definitions/runtimeStreamError"
                }
              },
              "title": "Stream result of gctrpcOrderbookResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/getexchangeotp": {
      "get": {
        "operationId": "GetExchangeOTPCode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetExchangeOTPReponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/getexchangeotps": {
      "get": {
        "operationId": "GetExchangeOTPCodes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetExchangeOTPsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/getexchangepairs": {
      "post": {
        "operationId": "GetExchangePairs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetExchangePairsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcGetExchangePairsRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/getexchanges": {
      "get": {
        "operationId": "GetExchanges",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetExchangesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "enabled",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/getexchangetickerstream": {
      "get": {
        "operationId": "GetExchangeTickerStream",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/gctrpcTickerResponse"
                },
                "error": {
                  "$ref": "#/definitions/runtimeStreamError"
                }
              },
              "title": "Stream result of gctrpcTickerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/getforexproviders": {
      "get": {
        "operationId": "GetForexProviders",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetForexProvidersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/getforexrates": {
      "get": {
        "operationId": "GetForexRates",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetForexRatesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/gethistoriccandles": {
      "get": {
        "operationId": "GetHistoricCandles",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetHistoricCandlesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.delimiter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.base",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.quote",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "asset_type",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "time_interval",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "ex_request",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "sync",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "use_db",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "fill_missing_with_trades",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "force",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/getinfo": {
      "get": {
        "operationId": "GetInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/getloggerdetails": {
      "get": {
        "operationId": "GetLoggerDetails",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetLoggerDetailsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "logger",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/getorder": {
      "post": {
        "operationId": "GetOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcOrderDetails"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcGetOrderRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/getorderbook": {
      "post": {
        "operationId": "GetOrderbook",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcOrderbookResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcGetOrderbookRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/getorderbooks": {
      "get": {
        "operationId": "GetOrderbooks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetOrderbooksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/getorderbookstream": {
      "get": {
        "operationId": "GetOrderbookStream",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/gctrpcOrderbookResponse"
                },
                "error": {
                  "$ref": "#/definitions/runtimeStreamError"
                }
              },
              "title": "Stream result of gctrpcOrderbookResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.delimiter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.base",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.quote",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "asset_type",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/getorders": {
      "post": {
        "operationId": "GetOrders",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetOrdersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcGetOrdersRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/getportfolio": {
      "get": {
        "operationId": "GetPortfolio",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetPortfolioResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/getportfoliosummary": {
      "get": {
        "operationId": "GetPortfolioSummary",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetPortfolioSummaryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/getrpcendpoints": {
      "get": {
        "operationId": "GetRPCEndpoints",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetRPCEndpointsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/getsavedtrades": {
      "get": {
        "operationId": "GetSavedTrades",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcSavedTradesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.delimiter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.base",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.quote",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "asset_type",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/getsubsystems": {
      "get": {
        "operationId": "GetSubsystems",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetSusbsytemsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/getticker": {
      "post": {
        "operationId": "GetTicker",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcTickerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcGetTickerRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/gettickers": {
      "get": {
        "operationId": "GetTickers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetTickersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/gettickerstream": {
      "get": {
        "operationId": "GetTickerStream",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/gctrpcTickerResponse"
                },
                "error": {
                  "$ref": "#/definitions/runtimeStreamError"
                }
              },
              "title": "Stream result of gctrpcTickerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.delimiter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.base",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pair.quote",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "asset_type",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/removeevent": {
      "post": {
        "operationId": "RemoveEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGenericResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcRemoveEventRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/removeportfolioaddress": {
      "post": {
        "operationId": "RemovePortfolioAddress",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGenericResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcRemovePortfolioAddressRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/setallexchangepairs": {
      "get": {
        "operationId": "SetAllExchangePairs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGenericResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "enable",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/setexchangeasset": {
      "get": {
        "operationId": "SetExchangeAsset",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGenericResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "asset",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "enable",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/setexchangepair": {
      "post": {
        "operationId": "SetExchangePair",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGenericResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcSetExchangePairRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/setexchangetradeprocessing": {
      "get": {
        "operationId": "SetExchangeTradeProcessing",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGenericResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/setloggerdetails": {
      "post": {
        "operationId": "SetLoggerDetails",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGetLoggerDetailsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcSetLoggerDetailsRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/simulateorder": {
      "post": {
        "operationId": "SimulateOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcSimulateOrderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcSimulateOrderRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/submitorder": {
      "post": {
        "operationId": "SubmitOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcSubmitOrderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcSubmitOrderRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/updateexchangesupportedpairs": {
      "get": {
        "operationId": "UpdateExchangeSupportedPairs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGenericResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/websocketgetinfo": {
      "get": {
        "operationId": "WebsocketGetInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcWebsocketGetInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/websocketgetsubscriptions": {
      "get": {
        "operationId": "WebsocketGetSubscriptions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcWebsocketGetSubscriptionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/websocketsetenabled": {
      "get": {
        "operationId": "WebsocketSetEnabled",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGenericResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "enable",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/websocketsetproxy": {
      "get": {
        "operationId": "WebsocketSetProxy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGenericResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "proxy",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/websocketseturl": {
      "get": {
        "operationId": "WebsocketSetURL",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcGenericResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "exchange",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "url",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/whalebomb": {
      "post": {
        "operationId": "WhaleBomb",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcSimulateOrderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcWhaleBombRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/withdrawaleventbydate": {
      "post": {
        "operationId": "WithdrawalEventsByDate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcWithdrawalEventsByExchangeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcWithdrawalEventsByDateRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/withdrawaleventbyid": {
      "post": {
        "operationId": "WithdrawalEventsByExchange",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcWithdrawalEventsByExchangeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcWithdrawalEventsByExchangeRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/withdrawfiatfunds": {
      "post": {
        "operationId": "WithdrawFiatFunds",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcWithdrawResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcWithdrawFiatRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    },
    "/v1/withdrawithdrawcryptofundswfiatfunds": {
      "post": {
        "operationId": "WithdrawCryptocurrencyFunds",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gctrpcWithdrawResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/gctrpcWithdrawCryptoRequest"
            }
          }
        ],
        "tags": [
          "GoCryptoTrader"
        ]
      }
    }
  },
  "definitions": {
    "CancelAllOrdersResponseOrders": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "order_status": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "gctrpcAccount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "currencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gctrpcAccountCurrencyInfo"
          }
        }
      }
    },
    "gctrpcAccountCurrencyInfo": {
      "type": "object",
      "properties": {
        "currency": {
          "type": "string"
        },
        "total_value": {
          "type": "number",
          "format": "double"
        },
        "hold": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "gctrpcAddEventRequest": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "item": {
          "type": "string"
        },
        "condition_params": {
          "$ref": "#/definitions/gctrpcConditionParams"
        },
        "pair": {
          "$ref": "#/definitions/gctrpcCurrencyPair"
        },
        "asset_type": {
          "type": "string"
        },
        "action": {
          "type": "string"
        }
      }
    },
    "gctrpcAddEventResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "gctrpcAddPortfolioAddressRequest": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "coin_type": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "balance": {
          "type": "number",
          "format": "double"
        },
        "supported_exchanges": {
          "type": "string"
        },
        "cold_storage": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "gctrpcAuditEvent": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "identifier": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        }
      }
    },
    "gctrpcCancelAllOrdersRequest": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        }
      }
    },
    "gctrpcCancelAllOrdersResponse": {
      "type": "object",
      "properties": {
        "orders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CancelAllOrdersResponseOrders"
          }
        }
      }
    },
    "gctrpcCancelOrderRequest": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "account_id": {
          "type": "string"
        },
        "order_id": {
          "type": "string"
        },
        "pair": {
          "$ref": "#/definitions/gctrpcCurrencyPair"
        },
        "asset_type": {
          "type": "string"
        },
        "wallet_address": {
          "type": "string"
        },
        "side": {
          "type": "string"
        }
      }
    },
    "gctrpcCandle": {
      "type": "object",
      "properties": {
        "time": {
          "type": "string"
        },
        "low": {
          "type": "number",
          "format": "double"
        },
        "high": {
          "type": "number",
          "format": "double"
        },
        "open": {
          "type": "number",
          "format": "double"
        },
        "close": {
          "type": "number",
          "format": "double"
        },
        "volume": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "gctrpcCoin": {
      "type": "object",
      "properties": {
        "coin": {
          "type": "string"
        },
        "balance": {
          "type": "number",
          "format": "double"
        },
        "address": {
          "type": "string"
        },
        "percentage": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "gctrpcCommunicationRelayer": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "connected": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "gctrpcConditionParams": {
      "type": "object",
      "properties": {
        "condition": {
          "type": "string"
        },
        "price": {
          "type": "number",
          "format": "double"
        },
        "check_bids": {
          "type": "boolean",
          "format": "boolean"
        },
        "check_bids_and_asks": {
          "type": "boolean",
          "format": "boolean"
        },
        "orderbook_amount": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "gctrpcCryptoWithdrawalEvent": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "address_tag": {
          "type": "string"
        },
        "fee": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "gctrpcCurrencyPair": {
      "type": "object",
      "properties": {
        "delimiter": {
          "type": "string"
        },
        "base": {
          "type": "string"
        },
        "quote": {
          "type": "string"
        }
      }
    },
    "gctrpcFiatWithdrawalEvent": {
      "type": "object",
      "properties": {
        "bank_name": {
          "type": "string"
        },
        "account_name": {
          "type": "string"
        },
        "account_number": {
          "type": "string"
        },
        "bsb": {
          "type": "string"
        },
        "swift": {
          "type": "string"
        },
        "iban": {
          "type": "string"
        }
      }
    },
    "gctrpcFindMissingIntervalsResponse": {
      "type": "object",
      "properties": {
        "exchangeName": {
          "type": "string"
        },
        "assetType": {
          "type": "string"
        },
        "pair": {
          "$ref": "#/definitions/gctrpcCurrencyPair"
        },
        "missingPeriods": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "type": "string"
        }
      }
    },
    "gctrpcForexProvider": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "verbose": {
          "type": "boolean",
          "format": "boolean"
        },
        "rest_polling_delay": {
          "type": "string"
        },
        "api_key": {
          "type": "string"
        },
        "api_key_level": {
          "type": "string",
          "format": "int64"
        },
        "primary_provider": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "gctrpcForexRatesConversion": {
      "type": "object",
      "properties": {
        "from": {
          "type": "string"
        },
        "to": {
          "type": "string"
        },
        "rate": {
          "type": "number",
          "format": "double"
        },
        "inverse_rate": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "gctrpcGCTScript": {
      "type": "object",
      "properties": {
        "UUID": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "next_run": {
          "type": "string"
        }
      }
    },
    "gctrpcGCTScriptAutoLoadRequest": {
      "type": "object",
      "properties": {
        "script": {
          "type": "string"
        },
        "status": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "gctrpcGCTScriptListAllRequest": {
      "type": "object"
    },
    "gctrpcGCTScriptQueryResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "script": {
          "$ref": "#/definitions/gctrpcGCTScript"
        },
        "data": {
          "type": "string"
        }
      }
    },
    "gctrpcGCTScriptReadScriptRequest": {
      "type": "object",
      "properties": {
        "script": {
          "$ref": "#/definitions/gctrpcGCTScript"
        }
      }
    },
    "gctrpcGCTScriptStatusResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "scripts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gctrpcGCTScript"
          }
        }
      }
    },
    "gctrpcGCTScriptStopAllRequest": {
      "type": "object"
    },
    "gctrpcGCTScriptStopRequest": {
      "type": "object",
      "properties": {
        "script": {
          "$ref": "#/definitions/gctrpcGCTScript"
        }
      }
    },
    "gctrpcGCTScriptUploadRequest": {
      "type": "object",
      "properties": {
        "script_name": {
          "type": "string"
        },
        "script_data": {
          "type": "string"
        },
        "data": {
          "type": "string",
          "format": "byte"
        },
        "archived": {
          "type": "boolean",
          "format": "boolean"
        },
        "overwrite": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "gctrpcGenericExchangeNameRequest": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        }
      }
    },
    "gctrpcGenericResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "data": {
          "type": "string"
        }
      }
    },
    "gctrpcGetAccountInfoResponse": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gctrpcAccount"
          }
        }
      }
    },
    "gctrpcGetAuditEventResponse": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gctrpcAuditEvent"
          }
        }
      }
    },
    "gctrpcGetCommunicationRelayersResponse": {
      "type": "object",
      "properties": {
        "communication_relayers": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/gctrpcCommunicationRelayer"
          }
        }
      }
    },
    "gctrpcGetConfigResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "gctrpcGetCryptocurrencyDepositAddressRequest": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "cryptocurrency": {
          "type": "string"
        }
      }
    },
    "gctrpcGetCryptocurrencyDepositAddressResponse": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        }
      }
    },
    "gctrpcGetCryptocurrencyDepositAddressesRequest": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        }
      }
    },
    "gctrpcGetCryptocurrencyDepositAddressesResponse": {
      "type": "object",
      "properties": {
        "addresses": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "gctrpcGetEventsResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "exchange": {
          "type": "string"
        },
        "item": {
          "type": "string"
        },
        "condition_params": {
          "$ref": "#/definitions/gctrpcConditionParams"
        },
        "pair": {
          "$ref": "#/definitions/gctrpcCurrencyPair"
        },
        "action": {
          "type": "string"
        },
        "executed": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "gctrpcGetExchangeAssetsResponse": {
      "type": "object",
      "properties": {
        "assets": {
          "type": "string"
        }
      }
    },
    "gctrpcGetExchangeInfoResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "verbose": {
          "type": "boolean",
          "format": "boolean"
        },
        "using_sandbox": {
          "type": "boolean",
          "format": "boolean"
        },
        "http_timeout": {
          "type": "string"
        },
        "http_useragent": {
          "type": "string"
        },
        "http_proxy": {
          "type": "string"
        },
        "base_currencies": {
          "type": "string"
        },
        "supported_assets": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/gctrpcPairsSupported"
          }
        },
        "authenticated_api": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "gctrpcGetExchangeOTPReponse": {
      "type": "object",
      "properties": {
        "otp_code": {
          "type": "string"
        }
      }
    },
    "gctrpcGetExchangeOTPsResponse": {
      "type": "object",
      "properties": {
        "otp_codes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "gctrpcGetExchangePairsRequest": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "asset": {
          "type": "string"
        }
      }
    },
    "gctrpcGetExchangePairsResponse": {
      "type": "object",
      "properties": {
        "supported_assets": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/gctrpcPairsSupported"
          }
        }
      }
    },
    "gctrpcGetExchangesResponse": {
      "type": "object",
      "properties": {
        "exchanges": {
          "type": "string"
        }
      }
    },
    "gctrpcGetForexProvidersResponse": {
      "type": "object",
      "properties": {
        "forex_providers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gctrpcForexProvider"
          }
        }
      }
    },
    "gctrpcGetForexRatesResponse": {
      "type": "object",
      "properties": {
        "forex_rates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gctrpcForexRatesConversion"
          }
        }
      }
    },
    "gctrpcGetHistoricCandlesResponse": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "pair": {
          "$ref": "#/definitions/gctrpcCurrencyPair"
        },
        "start": {
          "type": "string"
        },
        "end": {
          "type": "string"
        },
        "interval": {
          "type": "string"
        },
        "candle": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gctrpcCandle"
          }
        }
      }
    },
    "gctrpcGetInfoResponse": {
      "type": "object",
      "properties": {
        "uptime": {
          "type": "string"
        },
        "available_exchanges": {
          "type": "string",
          "format": "int64"
        },
        "enabled_exchanges": {
          "type": "string",
          "format": "int64"
        },
        "default_forex_provider": {
          "type": "string"
        },
        "default_fiat_currency": {
          "type": "string"
        },
        "subsystem_status": {
          "type": "object",
          "additionalProperties": {
            "type": "boolean",
            "format": "boolean"
          }
        },
        "rpc_endpoints": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/gctrpcRPCEndpoint"
          }
        }
      }
    },
    "gctrpcGetLoggerDetailsResponse": {
      "type": "object",
      "properties": {
        "info": {
          "type": "boolean",
          "format": "boolean"
        },
        "debug": {
          "type": "boolean",
          "format": "boolean"
        },
        "warn": {
          "type": "boolean",
          "format": "boolean"
        },
        "error": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "gctrpcGetOrderRequest": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "order_id": {
          "type": "string"
        },
        "pair": {
          "$ref": "#/definitions/gctrpcCurrencyPair"
        }
      }
    },
    "gctrpcGetOrderbookRequest": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "pair": {
          "$ref": "#/definitions/gctrpcCurrencyPair"
        },
        "asset_type": {
          "type": "string"
        }
      }
    },
    "gctrpcGetOrderbooksResponse": {
      "type": "object",
      "properties": {
        "orderbooks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gctrpcOrderbooks"
          }
        }
      }
    },
    "gctrpcGetOrdersRequest": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "asset_type": {
          "type": "string"
        },
        "pair": {
          "$ref": "#/definitions/gctrpcCurrencyPair"
        }
      }
    },
    "gctrpcGetOrdersResponse": {
      "type": "object",
      "properties": {
        "orders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gctrpcOrderDetails"
          }
        }
      }
    },
    "gctrpcGetPortfolioResponse": {
      "type": "object",
      "properties": {
        "portfolio": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gctrpcPortfolioAddress"
          }
        }
      }
    },
    "gctrpcGetPortfolioSummaryResponse": {
      "type": "object",
      "properties": {
        "coin_totals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gctrpcCoin"
          }
        },
        "coins_offline": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gctrpcCoin"
          }
        },
        "coins_offline_summary": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/gctrpcOfflineCoins"
          }
        },
        "coins_online": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gctrpcCoin"
          }
        },
        "coins_online_summary": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/gctrpcOnlineCoins"
          }
        }
      }
    },
    "gctrpcGetRPCEndpointsResponse": {
      "type": "object",
      "properties": {
        "endpoints": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/gctrpcRPCEndpoint"
          }
        }
      }
    },
    "gctrpcGetSusbsytemsResponse": {
      "type": "object",
      "properties": {
        "subsystems_status": {
          "type": "object",
          "additionalProperties": {
            "type": "boolean",
            "format": "boolean"
          }
        }
      }
    },
    "gctrpcGetTickerRequest": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "pair": {
          "$ref": "#/definitions/gctrpcCurrencyPair"
        },
        "asset_type": {
          "type": "string"
        }
      }
    },
    "gctrpcGetTickersResponse": {
      "type": "object",
      "properties": {
        "tickers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gctrpcTickers"
          }
        }
      }
    },
    "gctrpcOfflineCoinSummary": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "balance": {
          "type": "number",
          "format": "double"
        },
        "percentage": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "gctrpcOfflineCoins": {
      "type": "object",
      "properties": {
        "addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gctrpcOfflineCoinSummary"
          }
        }
      }
    },
    "gctrpcOnlineCoinSummary": {
      "type": "object",
      "properties": {
        "balance": {
          "type": "number",
          "format": "double"
        },
        "percentage": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "gctrpcOnlineCoins": {
      "type": "object",
      "properties": {
        "coins": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/gctrpcOnlineCoinSummary"
          }
        }
      }
    },
    "gctrpcOrderDetails": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "client_order_id": {
          "type": "string"
        },
        "base_currency": {
          "type": "string"
        },
        "quote_currency": {
          "type": "string"
        },
        "asset_type": {
          "type": "string"
        },
        "order_side": {
          "type": "string"
        },
        "order_type": {
          "type": "string"
        },
        "creation_time": {
          "type": "string",
          "format": "int64"
        },
        "update_time": {
          "type": "string",
          "format": "int64"
        },
        "status": {
          "type": "string"
        },
        "price": {
          "type": "number",
          "format": "double"
        },
        "amount": {
          "type": "number",
          "format": "double"
        },
        "open_volume": {
          "type": "number",
          "format": "double"
        },
        "fee": {
          "type": "number",
          "format": "double"
        },
        "cost": {
          "type": "number",
          "format": "double"
        },
        "trades": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gctrpcTradeHistory"
          }
        }
      }
    },
    "gctrpcOrderbookItem": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "number",
          "format": "double"
        },
        "price": {
          "type": "number",
          "format": "double"
        },
        "id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "gctrpcOrderbookResponse": {
      "type": "object",
      "properties": {
        "pair": {
          "$ref": "#/definitions/gctrpcCurrencyPair"
        },
        "currency_pair": {
          "type": "string"
        },
        "bids": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gctrpcOrderbookItem"
          }
        },
        "asks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gctrpcOrderbookItem"
          }
        },
        "last_updated": {
          "type": "string",
          "format": "int64"
        },
        "asset_type": {
          "type": "string"
        }
      }
    },
    "gctrpcOrderbooks": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "orderbooks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gctrpcOrderbookResponse"
          }
        }
      }
    },
    "gctrpcPairsSupported": {
      "type": "object",
      "properties": {
        "available_pairs": {
          "type": "string"
        },
        "enabled_pairs": {
          "type": "string"
        }
      }
    },
    "gctrpcPortfolioAddress": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "coin_type": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "balance": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "gctrpcRPCEndpoint": {
      "type": "object",
      "properties": {
        "started": {
          "type": "boolean",
          "format": "boolean"
        },
        "listen_address": {
          "type": "string"
        }
      }
    },
    "gctrpcRemoveEventRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "gctrpcRemovePortfolioAddressRequest": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "coin_type": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "gctrpcSavedTrades": {
      "type": "object",
      "properties": {
        "price": {
          "type": "number",
          "format": "double"
        },
        "amount": {
          "type": "number",
          "format": "double"
        },
        "side": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "trade_id": {
          "type": "string"
        }
      }
    },
    "gctrpcSavedTradesResponse": {
      "type": "object",
      "properties": {
        "exchange_name": {
          "type": "string"
        },
        "asset": {
          "type": "string"
        },
        "pair": {
          "$ref": "#/definitions/gctrpcCurrencyPair"
        },
        "trades": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gctrpcSavedTrades"
          }
        }
      }
    },
    "gctrpcSetExchangePairRequest": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "asset_type": {
          "type": "string"
        },
        "pairs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gctrpcCurrencyPair"
          }
        },
        "enable": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "gctrpcSetLoggerDetailsRequest": {
      "type": "object",
      "properties": {
        "logger": {
          "type": "string"
        },
        "level": {
          "type": "string"
        }
      }
    },
    "gctrpcSimulateOrderRequest": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "pair": {
          "$ref": "#/definitions/gctrpcCurrencyPair"
        },
        "amount": {
          "type": "number",
          "format": "double"
        },
        "side": {
          "type": "string"
        }
      }
    },
    "gctrpcSimulateOrderResponse": {
      "type": "object",
      "properties": {
        "orders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gctrpcOrderbookItem"
          }
        },
        "amount": {
          "type": "number",
          "format": "double"
        },
        "minimum_price": {
          "type": "number",
          "format": "double"
        },
        "maximum_price": {
          "type": "number",
          "format": "double"
        },
        "percentage_gain_loss": {
          "type": "number",
          "format": "double"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "gctrpcSubmitOrderRequest": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "pair": {
          "$ref": "#/definitions/gctrpcCurrencyPair"
        },
        "side": {
          "type": "string"
        },
        "order_type": {
          "type": "string"
        },
        "amount": {
          "type": "number",
          "format": "double"
        },
        "price": {
          "type": "number",
          "format": "double"
        },
        "client_id": {
          "type": "string"
        },
        "asset_type": {
          "type": "string"
        }
      }
    },
    "gctrpcSubmitOrderResponse": {
      "type": "object",
      "properties": {
        "order_placed": {
          "type": "boolean",
          "format": "boolean"
        },
        "order_id": {
          "type": "string"
        },
        "trades": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gctrpcTrades"
          }
        }
      }
    },
    "gctrpcTickerResponse": {
      "type": "object",
      "properties": {
        "pair": {
          "$ref": "#/definitions/gctrpcCurrencyPair"
        },
        "last_updated": {
          "type": "string",
          "format": "int64"
        },
        "currency_pair": {
          "type": "string"
        },
        "last": {
          "type": "number",
          "format": "double"
        },
        "high": {
          "type": "number",
          "format": "double"
        },
        "low": {
          "type": "number",
          "format": "double"
        },
        "bid": {
          "type": "number",
          "format": "double"
        },
        "ask": {
          "type": "number",
          "format": "double"
        },
        "volume": {
          "type": "number",
          "format": "double"
        },
        "price_ath": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "gctrpcTickers": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "tickers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gctrpcTickerResponse"
          }
        }
      }
    },
    "gctrpcTradeHistory": {
      "type": "object",
      "properties": {
        "creation_time": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string"
        },
        "price": {
          "type": "number",
          "format": "double"
        },
        "amount": {
          "type": "number",
          "format": "double"
        },
        "exchange": {
          "type": "string"
        },
        "asset_type": {
          "type": "string"
        },
        "order_side": {
          "type": "string"
        },
        "fee": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "gctrpcTrades": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "number",
          "format": "double"
        },
        "price": {
          "type": "number",
          "format": "double"
        },
        "fee": {
          "type": "number",
          "format": "double"
        },
        "fee_asset": {
          "type": "string"
        }
      }
    },
    "gctrpcWebsocketGetInfoResponse": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "supported": {
          "type": "boolean",
          "format": "boolean"
        },
        "enabled": {
          "type": "boolean",
          "format": "boolean"
        },
        "authenticated_supported": {
          "type": "boolean",
          "format": "boolean"
        },
        "authenticated": {
          "type": "boolean",
          "format": "boolean"
        },
        "running_url": {
          "type": "string"
        },
        "proxy_address": {
          "type": "string"
        }
      }
    },
    "gctrpcWebsocketGetSubscriptionsResponse": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "subscriptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gctrpcWebsocketSubscription"
          }
        }
      }
    },
    "gctrpcWebsocketSubscription": {
      "type": "object",
      "properties": {
        "channel": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "asset": {
          "type": "string"
        },
        "params": {
          "type": "string"
        }
      }
    },
    "gctrpcWhaleBombRequest": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "pair": {
          "$ref": "#/definitions/gctrpcCurrencyPair"
        },
        "price_target": {
          "type": "number",
          "format": "double"
        },
        "side": {
          "type": "string"
        }
      }
    },
    "gctrpcWithdrawCryptoRequest": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "address_tag": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "amount": {
          "type": "number",
          "format": "double"
        },
        "fee": {
          "type": "number",
          "format": "double"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "gctrpcWithdrawFiatRequest": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "amount": {
          "type": "number",
          "format": "double"
        },
        "description": {
          "type": "string"
        },
        "bank_account_id": {
          "type": "string"
        }
      }
    },
    "gctrpcWithdrawResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "gctrpcWithdrawalEventByIDRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "gctrpcWithdrawalEventByIDResponse": {
      "type": "object",
      "properties": {
        "event": {
          "$ref": "#/definitions/gctrpcWithdrawalEventResponse"
        }
      }
    },
    "gctrpcWithdrawalEventResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "exchange": {
          "$ref": "#/definitions/gctrpcWithdrawlExchangeEvent"
        },
        "request": {
          "$ref": "#/definitions/gctrpcWithdrawalRequestEvent"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "gctrpcWithdrawalEventsByDateRequest": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "start": {
          "type": "string"
        },
        "end": {
          "type": "string"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "gctrpcWithdrawalEventsByExchangeRequest": {
      "type": "object",
      "properties": {
        "exchange": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "gctrpcWithdrawalEventsByExchangeResponse": {
      "type": "object",
      "properties": {
        "event": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gctrpcWithdrawalEventResponse"
          }
        }
      }
    },
    "gctrpcWithdrawalRequestEvent": {
      "type": "object",
      "properties": {
        "currency": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "amount": {
          "type": "number",
          "format": "double"
        },
        "type": {
          "type": "integer",
          "format": "int32"
        },
        "fiat": {
          "$ref": "#/definitions/gctrpcFiatWithdrawalEvent"
        },
        "crypto": {
          "$ref": "#/definitions/gctrpcCryptoWithdrawalEvent"
        }
      }
    },
    "gctrpcWithdrawlExchangeEvent": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "runtimeStreamError": {
      "type": "object",
      "properties": {
        "grpc_code": {
          "type": "integer",
          "format": "int32"
        },
        "http_code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "http_status": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
